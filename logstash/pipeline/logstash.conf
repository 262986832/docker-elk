input {
    kafka {
        bootstrap_servers => "10.10.X.A:9092,10.10.X.B:9092,10.10.X.C:9092"
        consumer_threads => 6 ## 设置成 partition 数量即可
        decorate_events => false
        topics => ["log-im"]
        group_id => "group-log-im"
        type => "log-im"
    }
    kafka {
        bootstrap_servers => "10.9.X.A:9092,10.9.X.B:9092,10.9.X.C:9092"
        consumer_threads => 8
        decorate_events => false
        topics => ["log-dev"]
        group_id => "group-log-dev"
        type => "log-dev"
    }
}

## Add your filters / logstash plugins configuration here
filter {
    mutate {
        remove_field => [ "@version" ]
    }
    if [type] == "log-im" {
        ## grok 插件可以将非结构化日志解析成结构化的
        ## 测试工具: http://grokdebug.herokuapp.com
        ## 推荐阅读: https://www.elastic.co/blog/do-you-grok-grok
        grok {
            match => { "message" => "^%{DATA:hostname} %{DATA:service} (?<message>.*)" }
            overwrite => [ "message" ]
        }
        grok {
            match => {
                "message" => [
                    "^\[%{DATA:time}\] (?<message>.*)",
                    "^(?<time>[T|M|W|S|F]{1}[a-z]{2} [J|F|M|A|S|O|N|D]{1}[a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} [GMT+]{4}[0-9]{4} [(CST)]{5}) - %{LOGLEVEL:level}: (?<message>.*)",
                    "^(?<time>[0-9]{2}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}) - %{LOGLEVEL:level}: (?<message>.*)",
                    "^(?<message>.*)"
                ]
            }
            overwrite => [ "message" ]
        }
        ## 解析 json 格式的字段
        json {
            source => "message"
            skip_on_invalid_json => true
            remove_field => [ "message" ]
        }
        ## 将日志内的时间戳解析到 @timestamp 中，方便之后 Kibana 按时间索引排序
        date {
            match => [ "time", "ISO8601", "EEE MMM dd yyyy HH:mm:ss 'GMT'Z '(CST)'", "dd/MMM/yyyy:HH:mm:ss Z", "yy-MM-dd HH:mm:ss", "dd-MMM-yyyy HH:mm:ss ZZZ", "yyyy-MM-dd HH:mm:ss ZZ", "yyyy-MM-dd HH:mm ZZ" ]
            remove_field => [ "time" ]
        }
        if [service] == "backend-php-error" {
            mutate {
                add_field => { "level" => "error" }
            }
        }
    }
}

output {
    ## 按 type 区分不同 topic 的日志，然后写入不同的目录
    if [type] == "log-im" {
        elasticsearch {
            hosts => ["localhost:9200", "10.42.X.B:9200", "10.42.X.C:9200"]
            index => "%{type}-%{+YYYY.MM.dd}"
        }
    }
    if [type] == "log-dev" {
         elasticsearch {
             hosts => ["localhost:9200", "10.42.X.B:9200", "10.42.X.C:9200"]
             index => "%{type}-%{+YYYY.MM.dd}"
        }
    }
}
